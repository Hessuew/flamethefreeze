---
import Layout from "~/layouts/PageLayout.astro";

import Hero from "~/components/widgets/Hero.astro";
import prayer from "~/assets/images/fire_of_god_and_fire_for_god-prayer.webp";
import fire from "~/assets/images/index/fire_of_god_and_fire_for_god-fire.webp";
import bible from "~/assets/images/index/fire_of_god_and_fire_for_god-bible.webp";
import company from "~/assets/images/index/fire_of_god_and_fire_for_god-company.webp";
import derek_prince from "~/assets/images/ministries/fire_of_god_and_fire_for_god-derek_prince.webp";
import kenneth_hagin from "~/assets/images/ministries/fire_of_god_and_fire_for_god-kenneth_hagin.webp";
import koinonia from "~/assets/images/ministries/fire_of_god_and_fire_for_god-koinonia.webp";
import prayer_church from "~/assets/images/ministries/fire_of_god_and_fire_for_god-prayer_church.webp";
import { TextAnimate } from "~/components/magicui/text-animate";
import CTAModern from "~/components/widgets/CTAModern.astro";
import ImageShowcase from "~/components/widgets/ImageShowcase.astro";
// import { getLangFromUrl, useTranslations } from "~/i18n/utils";
import city_in_flame from "~/assets/images/fire_of_god_and_fire_for_god-city_in_flame.webp";
import tree1 from "~/assets/images/fire_of_god_and_fire_for_god-tree1.webp";
import { BlurFade } from "~/components/magicui/blur-fade";
import VideoShowcase from "~/components/widgets/VideoShowcase.astro";
import FireButton from "~/components/ui/FireButton.astro";
import IceButton from "~/components/ui/IceButton.astro";
import FreezeOverlay from "~/components/ui/FreezeOverlay.astro";
import { getPermalink } from "~/utils/permalinks";
import { ENDPOINTS } from "~/config/endpoints";

const metadata = {
  title: "Flame the Freeze ‚Äî Where the Word of God and experience meets",
  ignoreTitleTemplate: true,
};

// const lang = getLangFromUrl(Astro.url);
// const t = useTranslations(lang);
---

<Layout metadata={metadata} siteRebuildStatus={{ status: "inProgress", display: false }}>
  <!-- Hero Widget ******************* -->
  <div class="min-h-screen relative overflow-hidden">
    <!-- Video Background -->

    <video
      id="hero-video"
      aria-label="fire of god and fire for god fire background"
      class="absolute inset-0 w-full h-full object-cover z-0 opacity-0 transition-opacity duration-1000 ease-in-out"
      data-src={`${ENDPOINTS.publicFiles}/fire_of_god_and_fire_for_god-fire_bg.mp4`}
      autoplay
      loop
      muted
      playsinline
      preload="metadata"
    >
      Your browser does not support the video tag.
    </video>
    <!-- Gradient mask for bottom fade to purple background -->
    <div
      id="hero-gradient"
      class="absolute inset-0 z-5 opacity-0 transition-opacity duration-1000 ease-in-out"
      style="background: linear-gradient(to bottom, transparent 0%, transparent 50%, rgba(26, 0, 36, 0.05) 60%, rgba(26, 0, 36, 0.15) 70%, rgba(26, 0, 36, 0.35) 80%, rgba(26, 0, 36, 0.65) 90%, rgba(26, 0, 36, 0.85) 95%, #1a0024 100%);"
    >
    </div>
    <!-- Overlay for better text readability (only on video area) -->
    <div
      class="absolute inset-0 bg-black bg-opacity-30 z-10"
      style="background: linear-gradient(to bottom, rgba(0, 0, 0, 0.3) 0%, rgba(0, 0, 0, 0.3) 50%, rgba(0, 0, 0, 0.15) 70%, transparent 85%);"
    >
    </div>
    <Hero classes={{ containerClass: "text-left relative z-20", subtitleContainerClass: "max-w-none" }}>
      <Fragment slot="title">
        <TextAnimate
          client:load
          className="text-4xl xs:text-5xl md:text-6xl xl:text-[60px] xl:leading-[64px] font-semibold leading-tighter tracking-tighter mb-4 xl:mb-[16px] font-heading"
          animation="blurInUp"
          delay={1}
          duration={0.6}
          by="character"
          once={true}
          text="Fire of God and"
        />

        <TextAnimate
          client:load
          className="text-4xl xs:text-5xl md:text-6xl xl:text-[60px] xl:leading-[64px] font-semibold leading-tighter tracking-tighter mb-4 xl:mb-[16px] font-heading"
          animation="blurInUp"
          delay={1.6}
          duration={0.6}
          by="character"
          once={true}
          text="fire for God in 2025?"
        />

        <div class="max-w-md">
          <TextAnimate
            client:load
            className="text-xl xl:text-[20px] xl:leading-[28px] font-normal tracking-normal  text-muted dark:text-slate-300 "
            animation="blurInUp"
            delay={3}
            duration={0.6}
            by="line"
            once={true}
            text="Yep! It can be done. Are you tired? Experience the fire of God and be on fire for God today!"
          />
        </div>
      </Fragment>

      <Fragment slot="subtitle">
        <div class="flex gap-4">
          <BlurFade client:load delay={4.2} direction="up" inView>
            <FireButton href="#what" text="Yes please!" variant="primary" size="small" icon="tabler:arrow-right" />
          </BlurFade>
          <BlurFade client:load delay={4.8} direction="up" inView>
            <IceButton text="No thank you" variant="primary" size="small" icon="tabler:x" onClick="triggerFreeze()" />
          </BlurFade>
        </div>
      </Fragment>
    </Hero>
  </div>

  <!-- Image Showcase Widget ********* -->

  <ImageShowcase
    id="what"
    tagline="What"
    layout="featured"
    classes={{
      headline: {
        subtitle: "max-w-md",
      },
    }}
    images={[
      {
        src: fire,
        alt: "",
        title: "Fire of God üî•: It is the Holy Ghost!",
        // description:
        //   "God himself is that fire. When the Holy Ghost is in a man that man can never be ordinary. He has got all the power of heaven residing in Him üîã and he can never be a lean soul üí™!",
      },
      {
        src: city_in_flame,
        alt: "",
        title: "Fire for God ‚ù§Ô∏è‚Äçüî•: The man is burrrrning hot for God",
        description:
          "Have you seen people who are just ablaze for God üí•‚ö°? Like their presence makes you think about your life and christianity.",
      },
      {
        src: tree1,
        alt: "",
        title: "There is fire üî• > there is life üå≥<br/>How hot are you?",
        // description:
        //   "No, you cannot be silent, empty, miserable, and discontented when you are on fire. The Holy Spirit will keep you _soooo_ alive that you will be surprised of yourself üòÑüôÉ",
      },
    ]}
  >
    <Fragment slot="title">
      What is the fire of God üî•?
      <br class="hidden sm:block" />And what is fire for God ‚ù§Ô∏è‚Äçüî•?
    </Fragment>
    <Fragment slot="subtitle">
      <span class="text-white">"Spirit filled souls are ablaze for God. </span>
      They love with a love that glows. They serve with a faith that kindles. They serve with a devotion that consumes. They
      hate sin with fierceness that burns. They rejoice with a joy that radiates. Love is perfected in the fire of God."
      ~ Samuel Chadwick
    </Fragment>
  </ImageShowcase>

  <!-- Services Widget *************** -->

  <ImageShowcase
    id="how"
    tagline="How"
    title='How can I receive<br class="hidden xs:block"/>the fire of God üì•üî•?'
    type={3}
    classes={{
      headline: {
        subtitle: "mx-0 max-w-md",
      },
    }}
    images={[
      {
        title: "Right company",
        description: "Join a company where the fire already is.",
        src: company,
        features: ["Log in a campfire", '"They prayed in one accord"'],
        href: getPermalink("/en/church"),
      },
      {
        title: "Prayer",
        description: "While he prayed his countenance altered.",
        src: prayer,
        features: ["Heartfelt / deep", "Fervent / passionate"],
        href: getPermalink("/en/prayer"),
      },
      {
        title: "The Word",
        description: "The Word of God is quick and powerful.",
        src: bible,
        features: ["Setting the hearts on fire", "Revelation of Spirit changing lives"],
        href: getPermalink("/en/word"),
      },
      {
        icon: true,
        href: getPermalink("/en/prayer"),
      },
    ]}
  >
    <Fragment slot="subtitle">
      <span class="text-white">The fire of God is not for a select few, but for all who believe.</span>
      <!-- <br class="hidden md:block" />
      But unfortunately many haven't tasted the fire of God. My friend, are you discontented üòñ, and looking to finally find
      the real thing? Look no further üèÅüéâ! -->
    </Fragment>
  </ImageShowcase>

  <VideoShowcase
    id="where"
    tagline="Where"
    title="Where can I receive<br/>the fire of God? üîéü§∑‚Äç‚ôÇÔ∏è"
    type={3}
    classes={{
      headline: {
        subtitle: "mx-0 max-w-md",
      },
    }}
    videos={[
      {
        title: "Prayer Church<span class='hidden xs:inline'> - Flame the Freeze</span>",
        link: "https://www.youtube.com/@Rukouksenseurakunta",
        description: "Mystery of godliness unfolded, Fire for God",
        src: prayer_church,
        features: ["Prayer", "Wisdom"],
      },
      {
        title: "Koinonia",
        link: "https://www.youtube.com/@KoinoniaGlobal",
        description: "Intimacy | Partnership | Fellowship",
        src: koinonia,
        features: ["Balanced content of all subjects", "People of fire, who are relevant in this world"],
      },
      {
        title: "Kenneth Hagin - Rhema",
        link: "https://www.youtube.com/@RHEMAKennethEHagin",
        description: "Timeless teachings of faith",
        src: kenneth_hagin,
        objectPosition: "top center",
        features: ["Faith", "Healing"],
      },
      {
        title: "Derek Prince Ministries",
        link: "https://www.youtube.com/@DerekPrinceMinistries",
        description: "Reaching the unreached, and teaching the untaught",
        src: derek_prince,
        objectPosition: "top center",
        features: ["Foundational pillars", "Deliverance / Curses", "Many other topics"],
      },
    ]}
  >
    <Fragment slot="subtitle">
      <span class="text-white">{`Be on fire for God => be in place where the fire of god is üî•üè†`}</span>
      <!-- Below is `non exhaustive and exclusive` list of ministries, and categories of what God has empowered them to do. Fasten
      your seatbelts üçíüòÅ! -->
    </Fragment>
  </VideoShowcase>

  <!-- Call to Action Widget ********* -->

  <CTAModern
    id="cta"
    tagline="Are you ready to be on fire for God?"
    title="Experience the fire of God today"
    subtitle={`Seriously, don't wait another second. God is calling you to evade every cold‚ùÑÔ∏èü•∂ and enter into a <span class="text-white underline">divine</span> fire üî•ü•µ. Noooooow(!) is the time of salvation!`}
    actions={[
      {
        buttonType: "fire", // üî• Fire button
        variant: "primary",
        size: "medium",
        text: "Yes, count me in!!",
        href: getPermalink("/en/prayer"),
        icon: "tabler:arrow-right",
      },
      {
        buttonType: "ice", // ‚ùÑÔ∏è Ice button
        variant: "secondary",
        size: "medium",
        text: "Maybe another time..",
        onClick: "triggerFreeze()",
        icon: "tabler:hand-stop",
      },
    ]}
  />

  <!-- Freeze Animation Overlay -->
  <FreezeOverlay />

  <script>
    document.addEventListener("astro:page-load", () => {
      // Start video after 1 second with proper fade-in effect
      const heroVideo = document.getElementById("hero-video") as HTMLVideoElement;
      const heroGradient = document.getElementById("hero-gradient") as HTMLVideoElement;
      if (heroVideo) {
        setTimeout(() => {
          const videoSrc = heroVideo.dataset.src;

          if (videoSrc && !heroVideo.src) {
            heroVideo.src = videoSrc;
            heroVideo.load(); // Ensure the video loads properly
          }

          // Set up event listener for when video has loaded enough data
          const handleVideoLoaded = () => {
            // Fade in the video only after it has loaded
            heroVideo.classList.remove("opacity-0");
            heroVideo.classList.add("opacity-100");
            heroGradient.classList.remove("opacity-0");
            heroGradient.classList.add("opacity-100");

            // Start playing the video with Safari-specific handling
            const playPromise = heroVideo.play();
            
            if (playPromise !== undefined) {
              playPromise
                .then(() => {
                  console.log("Video autoplay started successfully");
                })
                .catch((error) => {
                  console.log("Video autoplay failed:", error);
                  // For Safari, try to play on user interaction
                  if (error.name === 'NotAllowedError') {
                    console.log("Autoplay blocked - will attempt to play on user interaction");
                    // Add click listener to start video on first user interaction
                    const startVideoOnInteraction = () => {
                      heroVideo.play().then(() => {
                        console.log("Video started after user interaction");
                      }).catch(console.error);
                      document.removeEventListener('click', startVideoOnInteraction);
                      document.removeEventListener('touchstart', startVideoOnInteraction);
                    };
                    document.addEventListener('click', startVideoOnInteraction, { once: true });
                    document.addEventListener('touchstart', startVideoOnInteraction, { once: true });
                  }
                });
            }

            // Remove the event listener as it's no longer needed
            heroVideo.removeEventListener("loadeddata", handleVideoLoaded);
          };

          // Add event listener for when video data is loaded
          heroVideo.addEventListener("loadeddata", handleVideoLoaded);

          // Fallback: if video is already loaded (cached), trigger immediately
          if (heroVideo.readyState >= 2) {
            handleVideoLoaded();
          }
        }, 1000); // 1 second delay
      }
    });
  </script>
</Layout>
