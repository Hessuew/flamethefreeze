---
import WidgetWrapper from "../ui/WidgetWrapper.astro";
import type { CallToAction, Widget } from "~/types";
import Headline from "~/components/ui/Headline.astro";
import Button from "~/components/ui/Button.astro";

interface Props extends Widget {
  title?: string;
  subtitle?: string;
  subtitle2?: string;
  tagline?: string;
  callToAction?: CallToAction;
  actions?: string | CallToAction[];
}

const {
  title = await Astro.slots.render("title"),
  subtitle = await Astro.slots.render("subtitle"),
  subtitle2 = await Astro.slots.render("subtitle2"),
  tagline = await Astro.slots.render("tagline"),
  actions = await Astro.slots.render("actions"),

  id,
  isDark = false,
  classes = {},
  bg = await Astro.slots.render("bg"),
} = Astro.props as Props;
---

<WidgetWrapper
  id={id}
  isDark={isDark}
  containerClass={`max-w-6xl xl:max-w-[1152px] mx-auto ${classes?.container ?? ""}`}
  bg={bg}
>
  <div
    class="max-w-3xl xl:max-w-[768px] mx-auto text-center p-6 xl:p-[24px] rounded-md xl:rounded-[6px] shadow-xl dark:shadow-none dark:border dark:border-slate-600"
  >
    <Headline
      title={title}
      subtitle={subtitle}
      subtitle2={subtitle2}
      tagline={tagline}
      classes={{
        container: "mb-0 md:mb-0",
        title:
          "text-4xl md:text-4xl xl:text-[36px] xl:leading-[40px] font-bold leading-tighter tracking-tighter mb-4 xl:mb-[16px] font-heading",
        subtitle: "text-xl xl:text-[20px] xl:leading-[28px] text-muted dark:text-slate-400",
      }}
    />
    {
      actions && (
        <div class="max-w-xs sm:max-w-md m-auto flex flex-nowrap flex-col sm:flex-row sm:justify-center gap-4 xl:gap-[16px] mt-6 xl:mt-[24px]">
          {Array.isArray(actions) ? (
            actions.map((action) => (
              <div class="flex w-full sm:w-auto">
                <Button {...(action || {})} class="w-full sm:mb-0" />
              </div>
            ))
          ) : (
            <Fragment set:html={actions} />
          )}
        </div>
      )
    }
  </div>
</WidgetWrapper>
