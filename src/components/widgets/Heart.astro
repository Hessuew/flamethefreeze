---
import WidgetWrapper from "~/components/ui/WidgetWrapper.astro";
import Headline from "~/components/ui/Headline.astro";
import type { Features } from "~/types";
import GradientText from "~/components/ui/GradientText.astro";
import { getLangFromUrl, useTranslations } from "~/i18n/utils";

const {
  title = await Astro.slots.render("title"),
  subtitle = await Astro.slots.render("subtitle"),
  tagline = await Astro.slots.render("tagline"),

  id,
  isDark = false,
  classes = {},
  bg = await Astro.slots.render("bg"),
} = Astro.props as Features;

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);
---

<WidgetWrapper id={id} isDark={isDark} containerClass={`max-w-5xl ${classes?.container ?? ""}`} bg={bg}>
  <Headline title={title} subtitle={subtitle} tagline={tagline} classes={classes?.headline} />
  <div class="w-full flex flex-col items-center pt-16 px-10">
    <div class="heart"></div>
    <div class="h-20"></div>
    <GradientText class="font-bold text-6xl sm:text-8xl md:text-9xl flex" text={t("about.h2")} />
    <div class="my-40 h-[1px] bg-neutral-400 w-full"></div>
  </div>
</WidgetWrapper>

<style>
  .heart {
    width: 80px;
    height: 80px;
    background-color: red;
    position: relative;
    transform: rotate(45deg);
    box-shadow:
      0 2.8px 2.2px rgba(0, 0, 0, 0.034),
      0 6.7px 5.3px rgba(0, 0, 0, 0.048),
      0 12.5px 10px rgba(0, 0, 0, 0.06),
      0 22.3px 17.9px rgba(0, 0, 0, 0.072);
    animation: hbeat 1s linear infinite;
  }

  .heart::before {
    content: "";
    width: 100%;
    height: 100%;
    background-color: red;
    position: absolute;
    border-radius: 50%;
    transform: translateY(-50%);
  }
  .heart::after {
    content: "";
    width: 100%;
    height: 100%;
    background-color: red;
    position: absolute;
    border-radius: 50%;
    transform: translateX(-50%);
  }

  @keyframes hbeat {
    0% {
      transform: rotate(45deg) scale(1);
    }
    20% {
      transform: rotate(45deg) scale(1);
    }
    40% {
      transform: rotate(45deg) scale(1.4);
    }
    60% {
      transform: rotate(45deg) scale(1.2);
    }
    80% {
      transform: rotate(45deg) scale(1.4);
    }
    100% {
      transform: rotate(45deg) scale(1);
    }
  }
</style>
