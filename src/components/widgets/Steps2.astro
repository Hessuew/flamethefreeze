---
import { Icon } from "astro-icon/components";
import WidgetWrapper from "~/components/ui/WidgetWrapper.astro";
import Headline from "~/components/ui/Headline.astro";
import Button from "~/components/ui/Button.astro";
import type { Steps } from "~/types";
import { twMerge } from "tailwind-merge";

const {
  title = await Astro.slots.render("title"),
  subtitle = await Astro.slots.render("subtitle"),
  tagline,
  callToAction = await Astro.slots.render("callToAction"),
  items = [],
  isReversed = false,
  link = false,
  type2 = false,

  id,
  isDark = false,
  classes = {},
  bg = await Astro.slots.render("bg"),
} = Astro.props as Steps;
---

<WidgetWrapper
  id={id}
  isDark={isDark}
  containerClass={`max-w-6xl xl:max-w-[1152px] mx-auto ${classes?.container ?? ""}`}
  bg={bg}
>
  <div class={`flex flex-col gap-8 md:gap-12 md:flex-row ${isReversed ? "md:flex-row-reverse" : ""}`}>
    <div
      class={`w-full lg:w-1/2 gap-8 md:gap-12 xl:gap-[48px] ${isReversed ? "ml-0 md:ml-8 lg:ml-16 xl:ml-[64px]" : "mr-0 md:mr-8 lg:mr-16 xl:mr-[64px]"}`}
    >
      <Headline
        title={title}
        subtitle={subtitle}
        tagline={tagline}
        classes={{
          container: "text-center md:text-left rtl:md:text-right mb-4 md:mb-8 xl:mb-[32px]",
          title: "mb-4 text-3xl lg:text-4xl xl:text-[32px] xl:leading-[40px] font-bold font-heading",
          subtitle: "mb-8 xl:mb-[32px] text-xl xl:text-[20px] xl:leading-[28px] text-muted dark:text-slate-400",
          // ...((classes?.headline as {}) ?? {}),
        }}
      />

      <div class="w-full text-center md:text-left rtl:md:text-right">
        {
          typeof callToAction === "string" ? (
            <Fragment set:html={callToAction} />
          ) : (
            callToAction &&
            callToAction.text &&
            callToAction.href && <Button variant="primary" {...callToAction} class="mb-12 w-auto" />
          )
        }
      </div>
    </div>
    <div class="w-full lg:w-1/2 px-0">
      <ul class="space-y-10 xl:space-y-[40px]">
        {
          items && items.length
            ? items.map(({ title: title2, description, icon, link: link2 }, index) => (
                <li class="flex md:-mx-4 xl:-mx-[16px]">
                  <div class="pr-4 xl:pr-[16px] sm:pl-4 xl:pl-[16px] rtl:pr-0 rtl:pl-4 xl:rtl:pl-[16px] rtl:sm:pl-0 rtl:sm:pr-4 xl:rtl:pr-[16px]">
                    <span
                      class={twMerge(
                        "flex w-16 h-16 xl:w-[64px] xl:h-[64px] dark:bg-primary mx-auto items-center justify-center text-2xl xl:text-[24px] xl:leading-[32px] font-bold rounded-full bg-primary text-primary",
                        type2 && "text-white"
                        // "text-white bg-secondary dark:bg-primary rounded-full w-10 h-10 p-2 md:w-12 md:h-12 md:p-3 mr-4 rtl:ml-4 rtl:mr-0"
                      )}
                    >
                      {icon ? (
                        <Icon
                          name={icon}
                          class={twMerge(
                            "w-6 h-6 xl:w-[24px] xl:h-[24px] icon-bold",
                            type2 && "w-7 h-7 xl:w-[28px] xl:h-[28px] text-white"
                          )}
                        />
                      ) : (
                        index + 1
                      )}
                    </span>
                  </div>
                  <div class="pl-4 xl:pl-[16px] rtl:pl-0 rtl:pr-4 xl:rtl:pr-[16px]">
                    <h3
                      class="mb-4 xl:mb-[16px] text-xl xl:text-[20px] xl:leading-[28px] font-semibold font-heading"
                      set:html={title2}
                    />
                    {link || link2 ? (
                      <a
                        class="text-blue-700 break-all hover:underline"
                        href={description}
                        set:html={description}
                        target="_blank"
                      />
                    ) : (
                      <p
                        class="text-muted dark:text-gray-400 break-word text-base xl:text-[16px] xl:leading-[24px]"
                        set:html={description}
                      />
                    )}
                  </div>
                </li>
              ))
            : ""
        }
      </ul>
    </div>
  </div>
</WidgetWrapper>
